#!/usr/bin/env bash

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
# set -o xtrace

# Print a backtrace on error
# https://github.com/ab/bin/blob/master/bash-backtrace.sh
bash_backtrace() {
    # Return value of command that caused error
    local RET=$?
    # Frame counter
    local I=0
    # backtrace layers
    local FRAMES=${#BASH_SOURCE[@]}

    # Restore STDOUT and STDERR as they might be in unknown states due to catching
    # an error in the middle of a command
    exec 1>&3 2>&4

    echo "Traceback (most recent call last):"

    for ((FRAME=FRAMES-2; FRAME >= 0; FRAME--)); do
        local LINENO=${BASH_LINENO[FRAME]}

        # Location of error
        echo "  File ${BASH_SOURCE[FRAME+1]}, line ${LINENO}, in ${FUNCNAME[FRAME+1]}"

        # Print the error line, with preceding whitespace removed
        echo "$(sed -n "${LINENO}s/^[   ]*/    /p" "${BASH_SOURCE[FRAME+1]}")"
    done

    echo "Exiting with status ${RET}"
    exit "${RET}"
}

# Copy STDOUT and STDERR so they can be restored later
exec 3>&1 4>&2
# Trap script errors and print some helpful debug info
trap bash_backtrace ERR

# Standardize the date stamps output
function datestamp () {
  date "+%F %H:%M:%S"
}

# Verify ETCD is running
echo -n "$(datestamp) ETCD Deamon Status: "
if ! systemctl is-active etcd.service
then
  echo "$(datestamp) ERROR: ETCD is not running"
fi

# Verify API service is running
echo -n "$(datestamp) OpenShift API Deamon Status: "
if ! systemctl is-active atomic-openshift-master-api.service
then
  echo "$(datestamp) ERROR: OpenShift API is not running"
fi

# Verify Controller service is running
echo -n "$(datestamp) OpenShift Controller Deamon Status: "
if ! systemctl is-active atomic-openshift-master-controllers.service
then
  echo "$(datestamp) ERROR: OpenShift Controller is not running"
fi

