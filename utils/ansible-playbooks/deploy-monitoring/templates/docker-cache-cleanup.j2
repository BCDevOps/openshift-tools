#!/usr/bin/env bash

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
# set -o xtrace

# Global variables re-used through the script.
MAILTO="William.Hutchison@dxcas.com Steven.Barre@dxcas.com"
MAILFROM="-r hslinuxteam@dxcas.com"

# Define global variable representing the text to display in the email subject for environment.
EMAIL_ENV="{{ email_env }}"

# Run the image prune
if ! /bin/docker image prune --all --force 2>&1 | tee /var/log/docker-cache-cleanup.log
then
  cat /var/log/docker-cache-cleanup.log | mail -s "${EMAIL_ENV} ERROR - $(hostname) Docker image prune failed!!" $MAILFROM $MAILTO
  exit 1
fi
